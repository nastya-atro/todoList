{"version":3,"sources":["components/AddList/AddList.module.css","components/Badge/Badge.module.css","components/List/List.module.css","components/Badge/Badge.jsx","components/List/List.jsx","components/AddList/AddButtonList.jsx","components/Tasks/Tasks.jsx","App.js","index.js"],"names":["module","exports","Badge","colors","onClick","className","style","backgroundColor","cn","s","active","badge","List","items","isRemovable","removeList","map","item","index","noactive","icon","name","todo__list_remove","class","AddList","onAddList","useState","isPopup","setPopup","onClose","setInputValue","setActiveColor","id","activeColor","inputValue","add_list","add_list_popup","add_list_popup_close","onChange","e","currentTarget","value","type","placeholder","add_list_popup_colors","Math","random","filter","color","alert","Tasks","tasks","changeTasks","todo_main_tasks","for","onBlur","App","db","lists","colorId","setLists","newList","addedList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a4dd819.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"add_list_popup\":\"AddList_add_list_popup__tXtQJ\",\"active\":\"AddList_active__nSziQ\",\"add_list_popup_close\":\"AddList_add_list_popup_close__2Y43A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"badge\":\"Badge_badge__1NpMd\",\"active\":\"Badge_active__28G59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo__list_remove\":\"List_todo__list_remove__2HeWc\"};","import React from 'react';\r\nimport s from './Badge.module.css'\r\nimport cn from 'classnames'\r\n\r\nconst Badge=({colors, onClick, className})=> <i onClick={onClick} \r\nstyle={{backgroundColor: colors}} \r\nclassName={cn({[s.active]:className}, s.badge)}></i>\r\n\r\nexport default Badge","import React from 'react';\r\nimport cn from 'classnames'\r\nimport Badge from '../Badge/Badge';\r\nimport s from './List.module.css'\r\n\r\n\r\n\r\nconst List = ({ items, isRemovable, onClick, removeList}) => {\r\n    return (\r\n\r\n        <ul onClick={onClick} className='todo__list'>\r\n            {items.map((item, index) =>\r\n                <li key={index} className={cn(item.noactive, { active: item.active })}>\r\n                    <span>{item.icon ? item.icon :\r\n                        (<Badge colors={item.colors}/>)\r\n                    }</span>\r\n                    <span>{item.name}</span>\r\n                    {isRemovable? <span onClick={()=>{removeList()}} className={s.todo__list_remove}><i class=\"fas fa-times\"></i></span> :null}\r\n                    \r\n                </li>)}\r\n        </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default List","import React, { useState } from 'react';\r\nimport Badge from '../Badge/Badge';\r\nimport List from '../List/List';\r\nimport s from './AddList.module.css'\r\n\r\nconst AddList = ({ colors, onAddList }) => {\r\n    let [isPopup, setPopup] = useState(false)\r\n    let visiblePopup = () => {\r\n        setPopup(!isPopup)\r\n    }\r\n\r\n    let onClose = () => {\r\n        setPopup(false)\r\n        setInputValue('')\r\n        setActiveColor(colors[0].id)\r\n    }\r\n\r\n    let [activeColor, setActiveColor] = useState(colors[0].id)\r\n    let [inputValue, setInputValue] = useState('')\r\n\r\n    const addNewList = () => {\r\n        if (!inputValue) {\r\n            alert('error')\r\n            return\r\n        }\r\n        onAddList({\r\n            id: Math.random(),\r\n            name: inputValue,\r\n            colors: colors.filter(color => color.id === activeColor)[0].name\r\n        })\r\n        onClose()\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.add_list}>\r\n            <List onClick={visiblePopup} items={[{ icon: <i class=\"fas fa-plus\"></i>, name: 'Добавить список' }]} />\r\n            {isPopup ? <div className={s.add_list_popup}>\r\n                <div className={s.add_list_popup_close}\r\n                    onClick={onClose}>\r\n                    <i class=\"fas fa-times\"></i></div>\r\n                <input\r\n                    onChange={(e) => { setInputValue(e.currentTarget.value) }}\r\n                    value={inputValue}\r\n                    type='text'\r\n                    placeholder='new list'></input>\r\n                <div>\r\n                    <div className={s.add_list_popup_colors}>\r\n                        {colors.map(colors => (<Badge\r\n                            className={activeColor === colors.id && s.active}\r\n                            onClick={() => setActiveColor(colors.id)}\r\n                            key={colors.id}\r\n                            colors={colors.name} />))}\r\n                    </div>\r\n                </div>\r\n                <div><button onClick={addNewList}>Добавить список</button></div>\r\n\r\n\r\n            </div> : null}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default AddList","import React, {useState} from 'react';\r\nimport s from './Tasks.module.css'\r\n\r\nconst Tasks=()=>{\r\n    let [tasks, changeTasks] = useState(true)\r\n\r\n\r\n    return(\r\n        <div className={s.todo_main_tasks}>\r\n            <h2>Фронтенд</h2>\r\n            <div>\r\n                <input id='checkbox' type='checkbox'/>\r\n                <span>{tasks? <label for='checkbox' onClick={()=>{changeTasks(false)}}>\r\n                    Some task </label> : <input type='text' onBlur={()=>{changeTasks(true)}}/>}</span>\r\n                \r\n                \r\n            </div>\r\n            \r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Tasks","import React, { useState } from 'react';\nimport './App.css';\nimport AddList from './components/AddList/AddButtonList';\nimport List from './components/List/List';\nimport db from './assets/db.json'\nimport Tasks from './components/Tasks/Tasks';\n\n\nfunction App() {\n\n  const [lists, setLists] = useState(db.lists.map(item => {\n    item.colors = db.colors.filter(color => color.id === item.colorId)[0].name\n    return item\n  }))\n\n  const onAddList = (newList) => {\n    const addedList = [\n      ...lists, newList\n    ]\n    setLists(addedList)\n  }\n\n  const removeList = () => {\n    alert('list remove')\n  }\n\n\n  return (\n    <div className='todo'>\n      <div className='todo_sidebar'>\n        <List items={[\n          { icon: <i class=\"fas fa-align-justify\"></i>, name: 'Все задачи' }]} />\n        <List removeList={removeList} isRemovable items={lists} />\n        <AddList onAddList={onAddList} colors={db.colors} />\n      </div>\n      <div className='todo_main'>\n        <Tasks/>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}